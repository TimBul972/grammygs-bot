//My ID: 1589218638
require("dotenv").config();
const {
  Bot,
  GrammyError,
  HTTPError,
  Keyboard,
  InlineKeyboard,
} = require("grammy");
//–æ—Ç–¥–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º—ã–π –ø–ª–∞–≥–∏–Ω
const { hydrate } = require("@grammyjs/hydrate");
const bot = new Bot(process.env.BOT_API_KEY);
bot.use(hydrate());

// bot.on([":media", "::url"], async (ctx) => {
//   await ctx.reply("–ü–æ–ª—É—á–∏–ª MEDIA –∏–ª–∏ URL");
// });

// bot.on("msg").filter(
//   (ctx) => {
//     return ctx.from.id === 1589218638; //–µ—Å–ª–∏ –∑–¥–µ—Å—å –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è true, —Ç–æ –≤—Ç–æ—Ä–∞—è —Ñ—É–Ω–∫—Ü–∏—è –Ω–∏–∂–µ –∏—Å–ø–æ–ª–Ω—è–µ—Ç—Å—è
//   },
//   async (ctx) => {
//     await ctx.reply("–ü—Ä–∏–≤–µ—Ç, –∞–¥–º–∏–Ω");
//   }
// );

bot.api.setMyCommands([
  {
    command: "start",
    description: "–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞",
  },
  {
    command: "menu",
    description: "–ü–æ–ª—É—á–∏—Ç—å –º–µ–Ω—é",
  },
]);

//ctx - ConTeXt –æ–±—ä–µ–∫—Ç
//await - –ø–æ–∑–≤–æ–ª—è–µ—Ç –¥–æ–∂–¥–∞—Ç—å—Å—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã –ø–µ—Ä–µ–¥ –≤—ã–∑–æ–≤–æ–º
bot.command("start", async (ctx) => {
  await ctx.react("üëå");
  await ctx.reply("–ü—Ä–∏–≤–µ—Ç\\! –ö–∞–Ω–∞–ª: [—ç—Ç–æ —Å—Å—ã–ª–∫–∞](www.glav.su)", {
    parse_mode: "MarkdownV2",
  });
});

const menuKeyboard = new InlineKeyboard()
  .text("–£–∑–Ω–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞", "order-status")
  .text("–û–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ –ø–æ–¥–¥–¥–µ—Ä–∂–∫—É", "support");

const backKeyboard = new InlineKeyboard().text("< –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", "back");

bot.command("menu", async (ctx) => {
  await ctx.reply("–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω—Å–∫—Ç –º–µ–Ω—é", {
    reply_markup: menuKeyboard,
  });
});

//–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–æ–∫
bot.callbackQuery("order-status", async (ctx) => {
  //editText –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –∏–∑ hydrate
  await ctx.callbackQuery.message.editText("–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞: –≤ –ø—É—Ç–∏", {
    reply_markup: backKeyboard,
  });
  await ctx.answerCallbackQuery();
});

bot.callbackQuery("support", async (ctx) => {
  //editText –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –∏–∑ hydrate
  await ctx.callbackQuery.message.editText("–í–∞—à –∑–∞–ø—Ä–æ—Å", {
    reply_markup: backKeyboard,
  });
  await ctx.answerCallbackQuery();
});

//–ø–æ–ª–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∏–º–∞–µ—Ç –∫–Ω–æ–ø–∫—É Back
bot.callbackQuery("back", async (ctx) => {
  //–º–µ—Ç–æ–¥ editText –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –∏–∑ –ø–ª–∞–≥–∏–Ω–∞ hydrate
  await ctx.callbackQuery.message.editText("–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é", {
    reply_markup: menuKeyboard,
  });
  await ctx.answerCallbackQuery();
});

//–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ –≤–∑—è—Ç –∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
bot.catch((err) => {
  const ctx = err.ctx;
  console.log(`Error with handling update: ${ctx.update.update_id}:`);
  const e = err.error;

  if (e instanceof GrammyError) {
    console.log("Error in request: ", e.description);
  } else if (e instanceof HTTPError) {
    console.log("Could not contact Telegram: ", e);
  } else {
    console.log("Unknown error", e);
  }
});

bot.start();
